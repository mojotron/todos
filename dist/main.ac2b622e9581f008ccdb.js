(()=>{"use strict";class t{static renderProject(){return'\n    <div class="modal__field">\n      <label class="modal__label">project name</label>\n      <input class="modal__input required-input" type="text" placeholder="..." data-input="title"/>\n    </div>\n  '}static textAreaHtml='\n    <textarea \n      class="modal__data-wrapper__text required-input" \n      rows="5" \n      data-input="text"></textarea>\n  ';static projectOptions(t){return t.map((t=>`\n        <option class="modal__option" value="${t}">\n          ${t}\n        </option>`)).join("\n")}static renderTask(t){return`\n    <div class="modal__field">\n      <label class="modal__label">task name</label>\n      <input\n        class="modal__input required-input"\n        type="text"\n        placeholder="..."\n        data-input="title"\n      />\n    </div>\n\n    <div class="modal__group">\n      <div class="modal__field">\n        <label class="modal__label">deadline</label>\n        <input\n          class="modal__input--date"\n          type="datetime-local"\n          data-input="deadline"\n        />\n      </div>\n\n      <div class="modal__field">\n        <label class="modal__label">priority</label>\n        <select class="modal__select" data-input="priority">\n          <option class="modal__option" value="low">\n            low\n          </option>\n          <option class="modal__option" value="moderate">\n            moderate\n          </option>\n          <option class="modal__option" value="critical">\n            critical\n          </option>\n        </select>\n      </div>\n    </div>\n\n    <div class="modal__group">\n      <div class="modal__field">\n        <label class="modal__label">task type</label>\n        <select class="modal__select select--long" data-input="type">\n          <option class="modal__option" value="text">\n            text\n          </option>\n          <option class="modal__option" value="list">\n            list\n          </option>\n          <option class="modal__option" value="checkbox">\n            checkbox\n          </option>\n        </select>\n      </div>\n\n      <div class="modal__field">\n        <label class="modal__label">project</label>\n        <select class="modal__select select--long" data-input="projectId">\n          <option class="modal__option" value="all tasks">\n            all\n          </option>\n          ${this.projectOptions(t)}\n        </select>\n      </div>\n    </div>\n\n    <div class="modal__field">\n      <label class="modal__label">task</label>\n      <div class="modal__data-wrapper" data-input="data">\n        ${this.textAreaHtml}\n      </div>\n    </div>\n  `}static listHtml='\n    <input class="modal__input--data" type="text">\n    <ul class="modal__data-wrapper__list required-input" data-input="list"></ul>\n    <button class="btn btn--add-list-item">+</button>\n  ';static getListItem(t){const e=document.createElement("li");return e.className="modal__data-wrapper__list__item",e.textContent=t,e}}class e{static removeModal(){document.querySelector(".modal")&&document.querySelector(".modal").remove()}static createBtnHandler(t){if(!this.validateInputs())return;const e=this.validateDataType(),a={title:document.querySelector('[data-input="title"]').value};if("project"===e)return this.removeModal(),void t(a);if(a.deadline=document.querySelector('[data-input="deadline"]').value,a.priority=document.querySelector('[data-input="priority"]').value,a.type=document.querySelector('[data-input="type"]').value,a.projectId=document.querySelector('[data-input="projectId"]').value,a.taskId=Date.now(),"text"===e&&(a.data=document.querySelector('[data-input="text"]').value.trim()),"list"===e||"checkbox"===e){const t=document.querySelector('[data-input="list"]'),e=Array.from(t.querySelectorAll("li")).map((t=>({checked:!1,listItem:t.textContent})));a.data=e}this.removeModal(),t(a)}static validateDataType(){if("new project"===document.querySelector(".modal__headings").textContent)return"project";const t=document.querySelector('[data-input="type"');return t.options[t.selectedIndex].value}static validateInputs(){const t=document.querySelectorAll(".required-input");for(const e of t){if("title"===e.dataset.input&&""===e.value.trim())return alert("title field is required"),!1;if("text"===e.dataset.input&&""===e.value.trim())return alert("text task field is required"),!1;if("list"===e.dataset.input&&!document.querySelector('[data-input="list"]').querySelector("li"))return alert("at least one list item is required"),!1}return!0}static render(e,a,n){this.removeModal();const s=document.createElement("div");s.className="modal",s.innerHTML=`\n      <header class="modal__header">\n        <h2 class="modal__headings">new ${e}</h2>\n        <button class="btn--close">X</button>\n      </header>\n      <form class="modal__form">\n        ${"project"===e?t.renderProject():t.renderTask(n)}\n        <button class="btn btn--create">create</button>\n      </form>`,document.body.append(s),s.querySelector(".btn--close").addEventListener("click",this.removeModal),s.querySelector(".btn--create").addEventListener("click",function(t){t.preventDefault(),this.createBtnHandler(a)}.bind(this));const i=s.querySelector('[data-input="type"]');if(!i)return;const l=s.querySelector('[data-input="data"]');i.addEventListener("change",(function(){const e=i.options[i.selectedIndex].value;if(l.innerHTML="","text"===e)l.innerHTML=t.textAreaHtml;else{l.innerHTML=t.listHtml;const e=l.querySelector("button"),a=l.querySelector("input"),n=l.querySelector("ul");e.addEventListener("click",(function(e){e.preventDefault(),""!==a.value&&(document.createElement("li").className="modal__data-wrapper__list__item",n.append(t.getListItem(a.value)),a.value="")}))}}))}}class a{static#t(t){const e=new Date,a=new Date(t);return Math.floor((a-e)/864e5)}static#e(t){const e=new Date(t);return Intl.DateTimeFormat(navigator.language,{year:"numeric",month:"numeric",day:"numeric"}).format(e)}static formatDateString(t){const e=this.#t(t);return e<0?`deadline passed ${this.#e(t)}`:0===e?"today":1===e?"tomorrow":e<8?`${e} days`:this.#e(t)}static isToday(t){return 0===this.#t(t)}static isInSevenDays(t){const e=this.#t(t);return e<8&&e>0}}const n=document.querySelector(".btn--open-project"),s=document.querySelector(".btn--open-task"),i=document.querySelector(".display__header"),l="tasks-TD",o="projects-TD",r=["low","moderate","critical"];class c{static createTextTaskHTML(t){return`\n      <div class="task__body__item task__item--text">\n        <p class="task__paragraph">${t}</p>\n        <button class="btn--task btn--edit" title="edit text">\n          &#9998;\n        </button>\n      </div>\n    `}static createListTaskHTML(t){return`\n    <div class="task__item--list">\n      <button class="btn--task btn--edit" title="add item">+</button>\n      ${t.map(((t,e)=>`\n          <div class="task__body__item task__item--list-item" data-item-id="${e}">\n            <p>&#10022; <span class="task__item__data">${t.listItem}</span></p>\n            <div>\n              <button class="btn--task" title="edit item">&#9998;</button>\n              <button class="btn--task" title="delete item">&#10006;</button>\n            </div>\n          </div>`)).join("\n")}\n    </div>`}static createCheckboxTaskHTML(t){return`\n    <div class="task__item--checkbox">\n      <button class="btn--task btn--edit" title="add item">+</button>\n      ${t.map(((t,e)=>`\n          <div \n            class="task__body__item task__item--checkbox-item"\n            data-item-id="${e}">\n            <p class="${t.checked?"task__checked":""}"><input class="task__checkbox" type="checkbox" ${t.checked?"checked":""}><spam class="task__item__data">${t.listItem}</spam></p>\n            <div>\n              <button class="btn--task" title="edit item">&#9998;</button>\n              <button class="btn--task" title="delete item">&#10006;</button>\n            </div>\n          </div>`)).join("\n")}\n    </div>`}static createTaskPriorityModalHTML(){return`<ul>${r.map((t=>`\n          <li class="priority-${t}" data-priority="${t}">\n            &#9873;\n          </li>`)).join("\n")}</ul>`}static createTaskProjectModalHTML(t){const e=function(t){return`\n          <li class="projects__modal__item" data-project-id="${t}">\n            ${t}\n          </li>`},a=t.map((t=>e(t))).join("\n");return`\n        <ul class="projects__modal__list">\n          ${e("all tasks")}\n          ${a}\n        </ul>\n      `}static createTaskDeadlineModalHTML(){return'\n        <div class="deadline__modal">\n          <input class="deadline__modal__input" type="datetime-local">\n          <button class="btn--deadline-modal">&#8626;</button>\n        </div>\n      '}static createTaskTextDataModalHTML(t){return`\n        <textarea class="task__textarea" placeholder="${t}">${t}</textarea>\n        <button class="btn btn--update-textarea">&#8626;</button>\n      `}static createTaskListDataModalHTML(){return'\n        <input class="task__input" type="text">\n        <button class="btn btn--add-list-item">+</button>\n      '}static createTaskListUpdateItemModalHTML(t){return`\n        <input class="task__update" type="text" value="${t}" placeholder="${t}">\n        <button class="btn btn--update btn--update-list-item">update</button>\n      `}}class d{static create(t,e,a){const n=document.createElement("div");n.className=e,n.innerHTML=a,t.append(n)}static update(t,e){t.innerHTML=e}}class u{constructor(t,e,a){if(this.action=t.target.title,this.taskId=t.target.closest(".task").dataset.taskId,"delete task"===this.action&&a.deleteTaskController(this.taskId),"change priority"===this.action&&(this.removeModal(),document.querySelector(".priority__modal")&&document.querySelector(".priority__modal").remove(),d.create(t.target.closest("li"),"priority__modal",c.createTaskPriorityModalHTML()),document.querySelectorAll(".priority__modal li").forEach((t=>t.addEventListener("click",function(t){const e=t.target.dataset.priority;a.changeTaskPriorityController(this.taskId,e)}.bind(this))))),"change project"===this.action&&(this.removeModal(),d.create(t.target.closest("li"),"projects__modal",c.createTaskProjectModalHTML(e)),document.querySelectorAll(".projects__modal li").forEach((t=>{t.addEventListener("click",function(t){const e=t.target.dataset.projectId;a.changeTaskProjectController(this.taskId,e)}.bind(this))}))),"change deadline"===this.action&&(this.removeModal(),d.create(t.target.closest("li"),"deadline__modal",c.createTaskDeadlineModalHTML()),document.querySelector(".btn--deadline-modal").addEventListener("click",function(t){const e=t.target.previousElementSibling.value;a.changeTaskDeadlineController(this.taskId,e)}.bind(this))),"edit text"===this.action){this.removeModal();const e=t.target.previousElementSibling;d.update(e,c.createTaskTextDataModalHTML(e.textContent));const n=document.querySelector(".task__textarea");n.focus(),n.selectionStart=n.value.length,document.querySelector(".btn--update-textarea").addEventListener("click",function(){const t=n.value.trim();a.changeTaskTextDataController(this.taskId,t)}.bind(this))}if("delete item"===this.action){const e=t.target.closest(".task__body__item").dataset.itemId;a.deleteTaskListItemController(this.taskId,e)}if("add item"===this.action){this.removeModal();const e=t.target.closest(".task__body");d.create(e,"input-list__modal",c.createTaskListDataModalHTML());const n=document.querySelector(".task__input");n.focus(),document.querySelector(".btn--add-list-item").addEventListener("click",function(t){const e=n.value.trim();a.addTaskListItemController(this.taskId,e)}.bind(this))}if("edit item"===this.action){this.removeModal();const e=t.target.closest(".task__body__item").querySelector(".task__item__data"),n=e.textContent;d.update(e,c.createTaskListUpdateItemModalHTML(n));const s=document.querySelector(".task__update");s.focus(),s.selectionStart=s.value.length;const i=document.querySelector(".btn--update-list-item"),l=t.target.closest(".task__body__item").dataset.itemId;i.addEventListener("click",function(){a.updateTaskListItemController(this.taskId,l,s.value.trim())}.bind(this))}}removeModal(){if(document.querySelector(".priority__modal")&&document.querySelector(".priority__modal").remove(),document.querySelector(".deadline__modal")&&document.querySelector(".deadline__modal").remove(),document.querySelector(".projects__modal")&&document.querySelector(".projects__modal").remove(),document.querySelector(".input-list__modal")&&document.querySelector(".input-list__modal").remove(),document.querySelector(".task__textarea")){const t=document.querySelector(".task__textarea");t.parentElement.innerHTML=t.placeholder}if(document.querySelector(".task__update")){const t=document.querySelector(".task__update");t.parentElement.innerHTML=t.placeholder}}}const m=new class{createTask(t,e,n){const s=document.createElement("div");return s.className="task",s.dataset.taskId=t.taskId,s.innerHTML=s.innerHTML=`\n      <header class="task__header">\n        <h2 class="task__headings">${t.title}</h2>\n        <nav>\n          <ul class="task__option">\n          <span class="task__date">${t.deadline?a.formatDateString(t.deadline):"no deadline"}\n          </span>\n            <li class="task__option__item task__option_item--deadline">\n              <button class="btn--task" title="change deadline">\n                &#128467;\n              </button>\n            </li>\n            <li class="task__option__item ">\n              <button \n                class="btn--task priority-${t.priority}"\n                data-priority="${t.priority}" \n                title="change priority">\n                  &#9873;\n                </button>\n              </li>\n            <li class="task__option__item">\n              <button class="btn--task" title="change project">\n                &#8646;\n              </button>\n            </li>\n            <li class="task__option__item">\n              <button class="btn--task" title="delete task">\n                &#10006;\n              </button>\n            </li>\n          </ul>\n        </nav>\n      </header>\n\n      <div class="task__body">\n        ${this.setData(t.type,t.data)}\n      </div>\n    `,s.querySelectorAll(".btn--task").forEach((t=>{t.addEventListener("click",(function(t){new u(t,e,n)}))})),s.querySelectorAll(".task__checkbox").forEach((t=>{t.addEventListener("click",(function(t){n.updateTaskListCheckboxController(s.dataset.taskId,t.target.closest(".task__body__item").dataset.itemId,t.target.checked)}))})),s}setData(t,e){return"text"===t?c.createTextTaskHTML(e):"list"===t?c.createListTaskHTML(e):"checkbox"===t?c.createCheckboxTaskHTML(e):void 0}};class p{static getData(t){return JSON.parse(localStorage.getItem(t))}static setData(t,e){localStorage.setItem(t,JSON.stringify(e))}static clear(){localStorage.clear(l),localStorage.clear(o)}}const _=new class{#a;#n=document.querySelector(".display__wrapper");constructor(){this.#a=p.getData(l)||[],this.#s()}addTask(t){this.#a.push(t),this.#s()}getTasks(){return this.#a}#s(){this.#a=this.#a.sort(((t,e)=>{const a=new Date(t.deadline),n=new Date(e.deadline);return a>n?1:a<n?-1:0})),p.setData(l,this.#a)}filterTasksByProjectId(t){return this.#a.filter((e=>e.projectId===t))}filterTasksByToday(){return this.#a.filter((t=>a.isToday(t.deadline)))}filterTasksByNextWeek(){return this.#a.filter((t=>a.isInSevenDays(t.deadline)))}render(t,e,a){this.#n.innerHTML="";const n="all tasks"===t?this.#a:"today"===t?this.filterTasksByToday():"7 days"===t?this.filterTasksByNextWeek():this.filterTasksByProjectId(t);for(const t of n)this.#n.append(m.createTask(t,e,a))}deleteTask(t){this.#a=this.#a.filter((e=>e.taskId!==t)),this.#s()}updateTask(t,e,a){const n=this.#a.find((e=>e.taskId===t));n&&(n[e]=a,this.#s())}deleteTaskListItem(t,e){const a=this.#a.find((e=>e.taskId===t));a.data.splice(e,1),this.#s()}addListItemToTask(t,e){const a=this.#a.find((e=>e.taskId===t));a.data.push({checked:!1,listItem:e}),this.#s()}updateListProperty(t,e,a,n){const s=this.#a.find((e=>e.taskId===t));s.data[e][a]=n,this.#s()}},k=new class{#i;constructor(){this.#i=p.getData(o)||[]}addProject(t){for(;this.#i.includes(t);)t+="&#9733;";this.#i.push(t),p.setData(o,this.#i)}deleteProject(t){this.#i=this.#i.filter((e=>e!==t)),p.setData(o,this.#i)}getProjects(){return this.#i}};n.addEventListener("click",(function(){e.render("project",h)}));const h=function(t){k.addProject(t.title),v(k.getProjects())},b=function(t){i.textContent=t,i.dataset.id=t},y=function(){_.render(i.dataset.id,k.getProjects(),f)},v=function(t){j.render(t)};s.addEventListener("click",(function(){e.render("task",T,k.getProjects())}));const T=function(t){_.addTask(t),y()},f={deleteTaskController(t){_.deleteTask(+t),y()},changeTaskPriorityController(t,e){_.updateTask(+t,"priority",e),y()},changeTaskProjectController(t,e){_.updateTask(+t,"projectId",e),y()},changeTaskDeadlineController(t,e){_.updateTask(+t,"deadline",e),y()},changeTaskTextDataController(t,e){_.updateTask(+t,"data",e),y()},deleteTaskListItemController(t,e){_.deleteTaskListItem(+t,e),y()},addTaskListItemController(t,e){_.addListItemToTask(+t,e),y()},updateTaskListItemController(t,e,a){_.updateListProperty(+t,+e,"listItem",a),y()},updateTaskListCheckboxController(t,e,a){_.updateListProperty(+t,+e,"checked",a),y()}},j=new class{#n=document.querySelector(".navigation");#l=document.querySelector(".nav__list--project-list");#o="nav__item--main";#r="nav__item--project";#c="btn--delete-project";#d;#u;constructor(t,e){this.#d=t,this.#u=e,this.#m(this.#o,this.#d)}#p(t){return t.map((t=>`\n          <li class="nav__item nav__item--project" data-id="${t}">\n            <span class="nav__item__span">${t}</span>\n            <button class="${this.#c}" title="delete project">\n              &#10006;\n            </button>\n          </li>`)).join("\n")}render(t){this.#l.innerHTML="",this.#l.insertAdjacentHTML("beforeend",this.#p(t)),this.#m(this.#r,this.#d),this.#_(this.#u)}#m(t,e){this.#n.querySelectorAll(`.${t}`).forEach((t=>{t.addEventListener("click",(()=>e(t.dataset.id)))}))}#_(t){this.#n.querySelectorAll(`.${this.#c}`).forEach((e=>e.addEventListener("click",(e=>{e.stopPropagation();const a=e.target.closest("li");t(a.dataset.id)}))))}}((function(t){b(t),_.render(t,k.getProjects(),f)}),(function(t){k.deleteProject(t),v(k.getProjects()),b("all tasks"),_.render("all tasks",k.getProjects(),f)}));j.render(k.getProjects()),_.render(i.dataset.id,k.getProjects(),f)})();